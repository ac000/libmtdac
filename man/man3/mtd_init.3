.TH MTD_INIT 3 "January 7, 2021" "0.17.0" "libmtdac"

.SH NAME

mtd_init \- per-instance/thread initialisation

.SH SYNOPSIS

.B #include <libmtdac/mtd.h>
.PP
.BI "int mtd_init(unsigned int " flags ", const struct mtd_cfg *" cfg );

.SH DESCRIPTION

This function should be called once in each thread (or program) where libmtdac
is to be used.
.PP
\fIflags\fP is a bitwise OR of one or more of the following

.TP 4
.B MTD_OPT_LOG_ERR
This sets the log level to ERROR (the default)

.TP
.B MTD_OPT_LOG_INFO
This sets the log level to INFO

.TP
.B MTD_OPT_LOG_DEBUG
This sets the log level to DEBUG

.PP
At most, only one of those should be set.

.TP 4
.B MTD_OPT_ACT_MOBILE_APP_DIRECT
Installed mobile application connecting directly to HMRC

.TP
.B MTD_OPT_ACT_DESKTOP_APP_DIRECT
Installed desktop application connecting directly to HMRC

.TP
.B MTD_OPT_ACT_MOBILE_APP_VIA_SERVER
Installed mobile application connecting through intermediary servers to HMRC

.TP
.B MTD_OPT_ACT_DESKTOP_APP_VIA_SERVER
Installed desktop application connecting through intermediary servers to HMRC

.TP
.B MTD_OPT_ACT_WEB_APP_VIA_SERVER
Web application connecting through intermediary servers to HMRC

.TP
.B MTD_OPT_ACT_BATCH_PROCESS_DIRECT
Batch process connecting directly to HMRC

.TP
.B MTD_OPT_ACT_OTHER_DIRECT
The application connects directly to HMRC but the method does not fit into the
architectures described above (the default).

.TP
.B MTD_OPT_ACT_OTHER_VIA_SERVER
The application connects through intermediary servers to HMRC but the method
does not fit into the architectures described above.

.PP
The above MTD_OPT_ACT_ flags specify the application connection type, this is
used by the Fraud Prevention Headers. Currently only
\fBMTD_OPT_ACT_OTHER_DIRECT\fP does anything.

.TP 4
.B MTD_OPT_GLOBAL_INIT
Can be used in a non-threaded application instead of calling
.BR mtd_global_init (3)

.TP
.B MTD_OPT_NO_ANTI_FRAUD_HDRS
Used to tell libmtdac to \fBnot\fP send \fBFraud Prevention Headers\fP.
However at some point, it will become mandatory to send them for all endpoints.

.PP

\fIcfg\fP is an optional \fIstruct mtd_cfg\fP that can be used to
override/provide various bits of library configuration.

.RS 4
.EX
struct mtd_cfg {
        const struct mtd_fph_ops *fph_ops;
        const char * const       *extra_hdrs;
};
.EE
.RE

\fIfph_ops\fP is a structure for setting the fraud prevention header value
functions

.RS 4
.EX
struct mtd_fph_ops {
        char *(*fph_device_id)(void);
        char *(*fph_user)(void);
        char *(*fph_tz)(void);
        char *(*fph_ipaddrs)(void);
        char *(*fph_ipaddrs_ts)(void);
        char *(*fph_macaddrs)(void);
        char *(*fph_srcip)(void);
        char *(*fph_srcip_ts)(void);
        char *(*fph_srcport)(void);
        char *(*fph_screens)(void);
        char *(*fph_window_sz)(void);
        char *(*fph_browser_plugins)(void);
        char *(*fph_browser_js_ua)(void);
        char *(*fph_browser_dnt)(void);
        char *(*fph_vendor_ip)(void);
        char *(*fph_vendor_fwd)(void);
        char *(*fph_ua)(void);
        char *(*fph_multi_factor)(void);
        char *(*fph_license_id)(void);
        char *(*fph_prod_name)(void);
        char *(*fph_version)(void);
        char *(*fph_version_cli)(void);
};
.EE
.RE

if the fph_ops structure or any of its members are NULL then the default
inbuilt functions are used.
.PP
These functions should return a dynamically allocated buffer that will be
free(3)'s by the library.

.PP

\fIextra_hdrs\fP can be used to send extra HTTP headers, it should point to a
NULL terminated array of character pointers.

.PP

If \fIcfg\fP is passed in as NULL, then default library values are used.

.SH RETURN VALUE

On success, zero (\fBMTD_ERR_NONE\fP) is returned. On error, a positive error
code is returned.

.SH ERRORS

.TP 4
.B MTD_ERR_OS
There was an OS level failure

.TP
.B MTD_ERR_UNKNOWN_FLAGS
One or more of the supplied flags weren't recognised

.SH EXAMPLE

.RS 4
.EX

unsigned int flags = MTD_OPT_GLOBAL_INIT | MTD_OPT_LOG_DEBUG;
const char *hdrs[2] = { NULL };
struct mtd_fph_ops fph_ops = { .fph_user = my_user,
                               .fph_version = my_ver };
struct mtd_cfg cfg = { .fph_ops = &fph_ops, .extra_hdrs = hdrs };

hdrs[0] = "Gov-Test-Scenario: AGENT_NOT_SUBSCRIBED";
err = mtd_init(flags, &cfg);
.EE
.RE

.SH SEE ALSO

.BR libmtdac (3),
.BR libmtdac_mtd.h (3),
.BR mtd_global_init (3),
.BR mtd_deinit (3)
